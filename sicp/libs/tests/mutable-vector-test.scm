(define-library (libs tests mutable-vector-test)
  (export run-tests)
  (import (scheme base)
          (scheme write)
          (srfi 64)
          (libs mutable-vector))
  (begin
    (define (run-tests)
      (test-begin "make-mutable-vector-tests")
      (let ((mv (make-mutable-vector))
            (mv-preallocated (make-mutable-vector 10)))
        (test-assert (mutable-vector? mv))
        (test-assert (mutable-vector? mv-preallocated))
        (test-equal 0 (mutable-vector-length mv))
        (test-equal 0 (mutable-vector-length mv-preallocated))
        
        (test-assert (guard (condition
                             (else (and (error-object? condition)
                                        (string=? (error-object-message condition)
                                                  "invalid argument for initial vector capacity"))))
                            (make-mutable-vector -1)))
        
        (test-error #t (make-mutable-vector -1))
        (test-error #t (make-mutable-vector 1/2)))
      (test-end "make-mutable-vector-tests"))))
