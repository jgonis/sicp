(include "seasonedSchemerCh14.sld")
(define-library (seasoned-schemer tests ch14)
  (export run-tests-ch14)
  (import (scheme base)
          (scheme write)
          (srfi 78)
          (seasoned-schemer ch14))
  (begin
    (define run-tests-ch14
      (lambda ()
        (test-leftmost)
        (test-rember1*)
        (test-depth*)))
    (define test-leftmost
      (lambda ()
        (check (leftmost '(((a) b) (c d)))
               => 'a)
        (check (leftmost '(((a) ()) () (e)))
               => 'a)
        (check (leftmost '(((() a) ())))
               => 'a)
        (check (leftmost '())
               => '())
        (check (leftmost '((() ()) () c))
               => 'c)
        (check (leftmost '(((() (() b)) () e)))
               => 'b)))
    (define test-rember1*
      (lambda ()
        (check (rember1* 'salad '((Swedish rye)
                                  (French (mustard salad turkey))
                                  salad))
               => '((Swedish rye)
                    (French (mustard turkey))
                    salad))
        (check (rember1* 'meat '((pasta meat)
                                 pasta
                                 (noodles meat sauce)
                                 meat tomatoes))
               => '((pasta)
                    pasta
                    (noodles meat sauce)
                    meat tomatoes))
        (check (rember1* 'salad '())
               => '())
        (check (rember1* 'b '(((() (() b)) () e b)))
               => '(((() (())) () e b)))))
    (define test-depth*
      (lambda ()
        (check (depth* '()) => 1)
        (check (depth* '((pickled) peppers (peppers pickled)))
               => 2)
        (check (depth* '(margarine
                         ((bitter butter)
                          (makes) (batter (bitter)))
                         butter))
               => 4)
        (check (depth* '(c (b (a b) a) a))
               => 3)
        (check (depth* '(()
                         ((bitter butter)
                          (makes)
                          (batter (bitter)))
                         butter))
               => 4)))))
