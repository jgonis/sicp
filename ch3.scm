(include "ch2.scm")
(define-library (sicp ex31)
  (export ex31)
  (import (scheme base))
  (begin
    (define (ex31 n)
      (lambda (x)
        (set! n (+ n x))
        n))))

(define-library (sicp ex32)
  (export ex32)
  (import (scheme base))
  (begin
    (define (ex32 func)
      (let ((call-count 0))
        (lambda (input)
          (cond ((eq? input 'how-many-calls?) call-count)
                (else (set! call-count (+ call-count 1))
                      (func input))))))))

(define-library (sicp ex33)
  (export make-account)
  (import (scheme base))
  (begin
    (define (make-account balance account-password)
      (define (withdraw amount)
        (cond ((>= balance amount) (set! balance (- balance amount))
               balance)
              (else "Insufficient funds")))
      (define (deposit amount)
        (set! balance (+ balance amount))
        balance)
      (define (incorrect-password . args)
        "Incorrect password")
      (define (dispatch password m)
        (cond ((eq? password account-password)
               (cond ((eq? m 'withdraw) withdraw)
                     ((eq? m 'deposit) deposit)
                     (else (error "Unknown request" m))))
              (else incorrect-password)))
      dispatch)))
